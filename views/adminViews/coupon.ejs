<%- include('../layout/adminlayout/header')-%>
  <style>
    /* The snackbar - position it at the bottom and in the middle of the screen */
    #snackbar {
      visibility: hidden;
      /* Hidden by default. Visible on click */
      min-width: 250px;
      /* Set a default minimum width */
      margin-left: -125px;
      /* Divide value of min-width by 2 */
      background-color: #333;
      /* Black background color */
      color: #fff;
      /* White text color */
      text-align: center;
      /* Centered text */
      border-radius: 2px;
      /* Rounded borders */
      padding: 16px;
      /* Padding */
      position: fixed;
      /* Sit on top of the screen */
      z-index: 1;
      /* Add a z-index if needed */
      left: 50%;
      /* Center the snackbar */
      bottom: 30px;
      /* 30px from the bottom */
    }

    /* Show the snackbar when clicking on a button (class added with JavaScript) */
    #snackbar.show {
      visibility: visible;
      /* Show the snackbar */
      /* Add animation: Take 0.5 seconds to fade in and out the snackbar.
  However, delay the fade out process for 2.5 seconds */
      -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
      animation: fadein 0.5s, fadeout 0.5s 2.5s;
    }

    /* Animations to fade the snackbar in and out */
    @-webkit-keyframes fadein {
      from {
        bottom: 0;
        opacity: 0;
      }

      to {
        bottom: 30px;
        opacity: 1;
      }
    }

    @keyframes fadein {
      from {
        bottom: 0;
        opacity: 0;
      }

      to {
        bottom: 30px;
        opacity: 1;
      }
    }

    @-webkit-keyframes fadeout {
      from {
        bottom: 30px;
        opacity: 1;
      }

      to {
        bottom: 0;
        opacity: 0;
      }
    }

    @keyframes fadeout {
      from {
        bottom: 30px;
        opacity: 1;
      }

      to {
        bottom: 0;
        opacity: 0;
      }
    }
  </style>
  <!-- Main content -->
  <div class="col-lg-10 grid-margin stretch-card">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">Coupon</h4>
        <p class="card-description">coupons <code></code></p>
        <button class="badge badge-info border-0" data-toggle="modal" data-target="#addCouponModal">Add coupon</button>
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Coupon Code</th>
                <th>Percentage</th>
                <th>Min Amount</th>
                <th>Redeem Amount</th>
                <th>Expiry Date</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if(coupon.length>0){%>
                <% coupon.forEach(coupon=>{%>
                  <tr>
                    <td>
                      <%= coupon.couponCode%>
                    </td>
                    <td class="text-success">
                      <%=coupon.percentage%>&#37;

                    </td>
                    <td class="text-danger">
                      &#8377;<%=coupon.minAmount%>
                    </td>
                    <td class="text-danger">
                      &#8377;<%=coupon.maxRedeemAmount%>
                    </td>
                    <td>
                      <%=coupon.expiryDate.toLocaleDateString()%>
                    </td>
                    <td>
                      <button class="badge badge-info border-0" data-toggle="modal" data-target="#editCouponModal"
                        onclick="editCoupon('<%= coupon.couponCode %>', '<%= coupon.percentage %>', '<%= coupon.minAmount %>', '<%= coupon.maxRedeemAmount %>', '<%= coupon.expiryDate.toISOString().slice(0, 10) %>', '<%= coupon._id %>')">
                        Edit
                      </button>
                      <button class="badge badge-danger border-0"
                        onclick="deleteCoupon('<%= coupon._id %>')">Delete</button>
                    </td>
                  </tr>
                  <% }) %>
                    <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Coupon Modal -->
  <div class="modal fade" id="addCouponModal" tabindex="-1" role="dialog" aria-labelledby="addCouponModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addCouponModalLabel">Add Coupon</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="addCouponForm">
            <div class="form-group">
              <label for="couponCode">Coupon Code</label>
              <input type="text" class="form-control" id="couponCode" name="couponCode" style="color: white;;">
            </div>
            <div class="form-group">
              <label for="percentage">Percentage</label>
              <input type="number" class="form-control" id="percentage" name="percentage" style="color: white;">
            </div>
            <div class="form-group">
              <label for="minAmount">Min Amount</label>
              <input type="number" class="form-control" id="minAmount" name="minAmount" style="color: white;">
            </div>
            <div class="form-group">
              <label for="redeemAmount">Redeem Amount</label>
              <input type="number" class="form-control" id="addRedeemAmount" name="redeemAmount" style="color: white;;">
            </div>
            <div class="form-group">
              <label for="expiryDate">Expiry Date</label>
              <input type="date" class="form-control" id="expiryDate" name="expiryDate" style="color: white;">
            </div>
            <p id="error-message" style="color: red; display: none;"></p>
            <button type="submit" class="btn btn-primary">Save</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Coupon Modal -->
  <div class="modal fade" id="editCouponModal" tabindex="-1" role="dialog" aria-labelledby="editCouponModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editCouponButton">Edit Coupon</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="editCouponForm">
            <input type="hidden" id="couponIdInput">
            <div class="form-group">
              <label for="editCouponCode">Coupon Code</label>
              <input type="text" class="form-control" id="editCouponCode" name="couponCode" style="color: white;">
              <span id="editCouponCodeError" style="color: red;"></span>
            </div>
            <div class="form-group">
              <label for="editPercentage">Percentage</label>
              <input type="number" class="form-control" id="editPercentage" name="percentage" style="color: white;">
              <span id="editPercentageError" style="color: red;"></span>
            </div>
            <div class="form-group">
              <label for="editMinAmount">Min Amount</label>
              <input type="number" class="form-control" id="editMinAmount" name="minAmount" style="color: white;">
              <span id="editMinAmountError" style="color: red;"></span>
            </div>
            <div class="form-group">
              <label for="editRedeemAmount">Redeem Amount</label>
              <input type="number" class="form-control" id="editRedeemAmount" name="redeemAmount" style="color: white;">
              <span id="editRedeemAmountError" style="color: red;"></span>
            </div>
            <div class="form-group">
              <label for="editExpiryDate">Expiry Date</label>
              <input type="date" class="form-control" id="editExpiryDate" name="expiryDate" style="color: white;">
              <span id="editExpiryDateError" style="color: red;"></span>
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div id="snackbar"></div>
  <!-- Optional JavaScript -->
  <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const addOfferButton = document.querySelector('[data-target="#addCouponModal"]');
      const addCouponModal = document.getElementById('addCouponModal');
      const closeButton = addCouponModal.querySelector('.close');
      const addCouponForm = document.getElementById('addCouponForm');
      const errorMessage = document.getElementById('error-message');

      // Function to open the modal
      function openModal() {
        addCouponModal.style.display = 'block';
        addCouponModal.classList.add('show');
      }

      // Function to close the modal
      function closeModal() {
        addCouponModal.style.display = 'none';
        addCouponModal.classList.remove('show');
        errorMessage.style.display = 'none'; // Hide error message on modal close
      }

      // Add click event listeners
      addOfferButton.addEventListener('click', openModal);
      closeButton.addEventListener('click', closeModal);

      // Optional: Close modal when clicking outside of it
      window.addEventListener('click', function (event) {
        if (event.target === addCouponModal) {
          closeModal();
        }
      });

      // Validation function
      function validateForm() {
        const couponCode = document.getElementById('couponCode').value.trim();
        const percentage = parseFloat(document.getElementById('percentage').value.trim());
        const minAmount = parseFloat(document.getElementById('minAmount').value.trim());
        const maxRedeemAmount = parseFloat(document.getElementById('addRedeemAmount').value.trim());
        const expiryDate = document.getElementById('expiryDate').value;

        if (!couponCode || isNaN(percentage) || isNaN(minAmount) || isNaN(maxRedeemAmount) || !expiryDate) {
          errorMessage.textContent = 'All fields are required and must be filled out.';
          errorMessage.style.display = 'block';
          return false;
        }

        if (percentage >= 99 || percentage <= 0) {
          errorMessage.textContent = 'Percentage should be less than 100.';
          errorMessage.style.display = 'block';
          return false;
        }

        const today = new Date().setHours(0, 0, 0, 0);
        const selectedDate = new Date(expiryDate).setHours(0, 0, 0, 0);

        if (selectedDate < today) {
          errorMessage.textContent = 'Expiry date should not be in the past.';
          errorMessage.style.display = 'block';
          return false;
        }
        if (isNaN(minAmount) || minAmount < 0) {
          errorMessage.textContent = "Minimum amount cannot be a negative number.";
          errorMessage.style.display = 'block'
          return false;
        }

        // Validate maxRedeemAmount
        if (isNaN(maxRedeemAmount) || maxRedeemAmount < 0) {
          errorMessage.textContent = "Redeemable amount cannot be a negative number.";
          errorMessage.style.display = 'block'
          return false;
        }


        return {
          couponCode,
          percentage,
          minAmount,
          maxRedeemAmount,
          expiryDate,
          minAmount,
          maxRedeemAmount
        };
      }

      // Form submission
      addCouponForm.onsubmit = async function (event) {
        event.preventDefault();

        const couponData = validateForm();
        if (!couponData) return;

        try {
          const result = await addCoupon(couponData);
          if (result.success) {
            showsnackbar('Coupon added successfully');
            setTimeout(() => {
              location.reload();
            }, 1000);
            closeModal();
          } else {
            showsnackbar('Unable to add coupon');
          }
        } catch (error) {
          console.log('Error adding coupon:', error);
        }
      }

      // Add coupon function
      async function addCoupon(couponData) {
        try {
          const response = await fetch('/admin/coupon/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(couponData),
          });

          if (!response.ok) {
            throw new Error('Network response was not ok');
          }

          return await response.json();
        } catch (error) {
          console.error('Error adding coupon:', error);
          throw error;
        }
      }
    });

    //delete coupon
    async function deleteCoupon(couponId) {
      try {
        const response = await fetch(`/admin/coupon/${couponId}`, {
          method: 'DELETE'
        })
        const result = await response.json()
        console.log(result)
        if (result.success) {
          showsnackbar('deleted successfully!')
          setTimeout(() => {

            location.reload()
          }, 1000)
        } else {
          showsnackbar('cant delete please try again...')
        }
      } catch (error) {
        console.log(error.message)
      }
    }
    function editCoupon(code, percentage, minAmount, maxRedeemAmount, expiryDate, id) {
      document.getElementById("editCouponCode").value = code;
      document.getElementById("editPercentage").value = percentage;
      document.getElementById("editMinAmount").value = minAmount;
      document.getElementById("editRedeemAmount").value = maxRedeemAmount;
      document.getElementById("editExpiryDate").value = expiryDate;
      document.getElementById("couponIdInput").value = id; // Set the couponId in hidden input
    }

    document.getElementById('editCouponForm').addEventListener('submit', async function (event) {
      event.preventDefault();

      let couponId = document.getElementById('couponIdInput').value;
      let couponCode = document.getElementById('editCouponCode').value;
      let percentage = document.getElementById('editPercentage').value;
      let minAmount = document.getElementById('editMinAmount').value;
      let maxRedeemAmount = document.getElementById('editRedeemAmount').value;
      let expiryDate = document.getElementById('editExpiryDate').value;



      let editCouponCodeError = document.getElementById('editCouponCodeError')
      let editPercentageError = document.getElementById('editPercentageError')
      let editMinAmountError = document.getElementById('editMinAmountError')
      let editRedeemAmountError = document.getElementById('editRedeemAmountError')
      let editExpiryDateError = document.getElementById('editExpiryDateError')
      isValid = true

      if (!couponCode.trim()) {
        editCouponCodeError.textContent = 'this field is required'
        isValid = false
      } else if (!/^[A-Za-z0-9]+$/.test(couponCode)) {
        editCouponCodeError.textContent = "Enter a valid coupon code";
        isValid = false;
      } else {
        editCouponCodeError.textContent = "";
      }
      if (!percentage.trim()) {
        editPercentageError.textContent = 'this field is required'
        isValid = false
      } else if (!/^\d+$/.test(percentage)) {
        editPercentageError.textContent = "Enter a valid value.";
        isValid = false;
      } else if (percentage < 1 || percentage > 99) {
        editPercentageError.textContent = "Enter a valid value.";
        isValid = false;

      } else if (percentage > 100) {
        editPercentageError.textContent = "Enter a valid value.";
        isValid = false;
      } else {
        editPercentageError.textContent = "";
      }
      if (!minAmount.trim()) {
        editMinAmountError.textContent = 'this field is required'
        isValid = false
      } else if (!/^\d+$/.test(minAmount)) {
        editMinAmountError.textContent = "Enter a valid value.";
        isValid = false;
      } else {
        editMinAmountError.textContent = "";
      }
      if (!maxRedeemAmount.trim()) {
        editRedeemAmountError.textContent = 'this field is required'
        isValid = false
      } else if (!/^\d+$/.test(maxRedeemAmount)) {
        editRedeemAmountError.textContent = "Enter a valid value.";
        isValid = false;
      } else {
        editRedeemAmountError.textContent = "";
      }
      if (!expiryDate.trim()) {
        editExpiryDateError.textContent = 'choose an expiry date'
        isValid = false
      } else {
        editExpiryDateError.textContent = "";
      }

      if (isValid) {
        const couponData = {
          couponCode,
          percentage,
          minAmount,
          maxRedeemAmount,
          expiryDate
        };

        try {
          const response = await fetch(`/admin/coupon/edit/${couponId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(couponData)
          });

          const result = await response.json();
          if (result.success) {
            showsnackbar('edited successfully');
            $('#editCouponModal').modal('hide');
            setTimeout(() => {
              window.location.reload();
            }, 1000);
          } else {
            showsnackbar('Cannot edit. Please try again.');
          }
        } catch (error) {
          console.error('Error:', error);
        }
      }
    });

    function showsnackbar(text) {
      // Get the snackbar DIV
      var x = document.getElementById("snackbar");
      x.innerHTML = text
      // Add the "show" class to DIV
      x.className = "show";

      // After 3 seconds, remove the show class from DIV
      setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
    }
  </script>