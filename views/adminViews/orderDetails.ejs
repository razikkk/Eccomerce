<%- include('../layout/adminlayout/header') -%>

<style>
    .small-select {
        width: 150px;
    }
    .payment-status-success {
        color: green;
    }
    .payment-status-pending {
        color: black;
    }
</style>

<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <h2 class="text-center">Order Details</h2>
        </div>
    </div>
    <% if(order) { %>
        <% order.items.forEach(item => { %>
            <div class="row my-4 p-4 border">
                <div class="col-md-4">
                    <a href="/product/<%= item.productId._id %>">
                        <div class="product-img" style="background-image: url(/static/user/images/<%= item.productId.images[0] %>); width: 100%; height: 200px; background-size: cover; background-position: center;"></div>
                    </a>
                </div>
                <div class="col-md-4 d-flex flex-column justify-content-between">
                    <div>
                        <h3><%= item.productId.name %></h3>
                        <p>Price: <span class="text-success">₹<%= item.itemPrice%></span></p>
                        <p>Quantity: <%= item.quantity %></p>
                        <p>Subtotal: ₹<%= item.productId.price * item.quantity %></p>
                        <p>Status: <%= item.itemStatus %></p>
                    </div>
                    <div>
                        <p>Payment Method: <%= order.paymentMethod %></p>
                        <p>Delivery Charge: <span class="text-danger">FREE <del class="text-muted">40</del></span></p>
                        <p>Total Amount: ₹<%= order.totalPrice %></p>
                    </div>
                    <div>
                        <select class="form-select form-select-sm small-select item-status-select" 
                                onchange="confirmUpdateOrderStatus('<%= item._id %>', this.value, '<%= item.itemStatus %>')" 
                                <% if (item.itemStatus === 'cancelled') { %> disabled <% } %> >
                            <option value="pending" <% if (item.itemStatus === 'pending') { %> selected <% } %>>Pending</option>
                            <option value="shipped" <% if (item.itemStatus === 'shipped') { %> selected <% } %>>Shipped</option>
                            <option value="delivered" <% if (item.itemStatus === 'delivered') { %> selected <% } %>>Delivered</option>
                            <% if(item.returnStatus === 'requested'){%>
                                <option value="approved">Approve Return</option>
                                <option value="rejected">Reject Return</option>
                            <% } %>
                        </select>
                    </div>
                    
                </div>
                <div class="col-md-4">
                    <h3>Delivery Address</h3>
                    <p><%= order.address.name %></p>
                    <p><%= order.address.street %></p>
                    <p><%= order.address.city %>, <%= order.address.state %> - <%= order.address.zip %></p>
                    <p>Zipcode: <%= order.address.zipcode %></p>
                    <p>Phone: <%= order.address.mobile %></p>
                </div>
            </div>
        <% }) %>
    <% } else { %>
        <p>No order details available.</p>
    <% } %>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function confirmUpdateOrderStatus(itemId,newStatus,currentStatus){
        const statusOrder = {
        'pending': 0,
        'shipped':1,
        'delivered': 2,
        'cancelled': 3,
        'approved':4,
        'rejected': 5
    };
    const currentStatusOrder = statusOrder[currentStatus]
    console.log(currentStatusOrder);
    const newStatusOrder = statusOrder[newStatus]
    console.log(newStatusOrder);


    if(currentStatus === 'Canceled'){
        Swal.fire({
            icon: 'error',
            title: 'Update failed',
            text: 'Cannot change status of canceled orders'
        });
        return
    }

    if (newStatusOrder < currentStatusOrder) {
        Swal.fire({
            icon: 'error',
            title: 'Update Failed',
            text: 'Cannot update to a previous status.'
        });
        return;
    }

    if ((currentStatus === 'Delivered' || currentStatus === 'Returned') && newStatus === 'Canceled') {
        Swal.fire({
            icon: 'error',
            title: 'Update Failed',
            text: 'Cannot cancel a delivered or returned order.'
        });
        return;
    }

    Swal.fire({
        title: 'Are you sure?',
        text: `You are about to change the status to "${newStatus}".`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!'
    }).then((result) => {
        if (result.isConfirmed) {
            updateOrderStatus(itemId, newStatus);
        }
    });
}
    
    function updateOrderStatus(itemId,newStatus) {
            
            const orderId = '<%= order._id %>';            

            fetch(`/admin/orders/orderDetails/updateStatus`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, newStatus, itemId })
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      alert('Order status updated successfully!');
                      location.reload();
                  } else {
                      alert('Failed to update status.');
                  }
              });
        };

    document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.item-status-select').forEach(select => {
        select.addEventListener('change', function() {
            const itemId = this.getAttribute('data-item-id');
            const orderId = '<%= order._id %>'; // Ensure order ID is correctly passed
            const action = this.value;

            fetch(`/admin/orders/returnOrder/${orderId}/${itemId}/${action}`, {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Return status updated');
                    location.reload();
                } else {
                    alert('Unable to update return status');
                }
            })
            .catch(error => {
                console.error(error.message);
            });
        });
    });
});
</script>

<%- include('../layout/adminlayout/footer') -%>
