<%- include('../layout/userlayout/header', {isLogin: isLogin}) -%>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .profile-container {
      margin-top: 80px;
    }
    .profile-card {
      padding: 40px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    .profile-buttons .btn {
      margin: 10px; /* Adjusted margin for spacing */
    }
    .profile-buttons {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    }
    .btn-edit-profile {
      background-color: #212529;
      color: #fff;
    }
    .modal-header, .modal-footer {
      background-color: #fff;
      color: #212529;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .modal-content {
      border-radius: 10px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }
    .modal-body {
      padding: 30px;
    }
    .form-label {
      font-weight: bold;
    }
    .form-control {
      border-radius: 5px;
    }
    .btn-close {
      color: #000;
      opacity: 1;
    }
    .btn-save-profile {
      background-color: #212529;
      color: #fff;
    }
    #snackbar {
  visibility: hidden; /* Hidden by default. Visible on click */
  min-width: 250px; /* Set a default minimum width */
  margin-left: -125px; /* Divide value of min-width by 2 */
  background-color: #28A745; /* Black background color */
  color: #fff; /* White text color */
  text-align: center; /* Centered text */
  border-radius: 2px; /* Rounded borders */
  padding: 16px; /* Padding */
  position: fixed; /* Sit on top of the screen */
  z-index: 1; /* Add a z-index if needed */
  left: 50%; /* Center the snackbar */
  bottom: 30px; /* 30px from the bottom */
}

/* Show the snackbar when clicking on a button (class added with JavaScript) */
#snackbar.show {
  visibility: visible; /* Show the snackbar */
  /* Add animation: Take 0.5 seconds to fade in and out the snackbar.
  However, delay the fade out process for 2.5 seconds */
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}

@keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}
  </style>
</head>
<body>

<div class="container profile-container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card profile-card">
        <div class="card-body text-center">
          <h3 id="uname" class="card-title mt-3">Hey, <%= user.name %></h3>
          <p id="uemail" class="card-text"><%= user.email %></p>
          <%if(!user.googleId){%>
          <p id="uphone" class="card-text"><%= user.mobile %></p>
        <%}%>
          <div class="profile-buttons mt-4">
            <a href="/profile/showAddress" class="btn btn-primary">Show Address</a>
            <a href="/profile/showOrder" class="btn btn-info">Show Orders</a>
            <% if(!user.googleId) { %>
                <button class="btn btn-warning" id="editProfileButton" data-bs-toggle="modal" data-bs-target="#editProfileModal">Edit Profile</button>
                <button type="button" class="btn btn-secondary"  data-bs-toggle="modal" data-bs-target="#changePasswordModal">Change Password</button>

            <% } %>
            <a href="/profile/wallet" class="btn btn-success">Wallet</a>
            <a href="/logout" class="btn btn-secondary">Logout</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editProfileForm">
            <div class="mb-3">
              <label for="profileName" class="form-label">Name</label>
              <input type="text" class="form-control" id="profileName" value="<%= user.name %>" required>
              <p id="profileNameError" style="color: red; display: none;">Name is requred</p>
            </div>
            <div class="mb-3">
              <label for="profileEmail" class="form-label">Email</label>
              <input type="email" class="form-control" id="profileEmail" value="<%= user.email %>" disabled>
            </div>
            <div class="mb-3">
              <label for="profileMobile" class="form-label">Mobile</label>
              <input type="text" class="form-control" id="profileMobile" value="<%= user.mobile %>" required>
              <p id="profileMobileError" style="color: red; display: none;">Mobile number is required</p>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-save-profile" onclick="submitProfileForm()">Save Changes</button>
        </div>
      </div>
    </div>
  </div>

  <!-- changepass -->
  <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm">
                    <div class="mb-3">
                        <label for="currentPassword" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="currentPassword" required>
                        <p id="currentPasswordError" style="color: red; display: none;">old password is required</p>
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="newPassword" required>
                    </div>
                    <div class="mb-3">
                        <label for="confirmNewPassword" class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="confirmNewPassword" required>
                        <p id="confirmNewPasswordError" style="color: red; display: none;">new password and confirm password doesn't match</p>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-save-profile" onclick="submitPasswordChange()">Save Changes</button>
            </div>
        </div>
    </div>
</div>
<div id="snackbar"></div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<script>

function submitPasswordChange() {
    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmNewPassword = document.getElementById('confirmNewPassword').value;

    const currentPasswordError=document.getElementById('currentPasswordError')
    const confirmNewPasswordError=document.getElementById('confirmNewPasswordError')
    let validate=true

   
    // Example of fetching data (you can customize this based on your backend setup)
    const formData = {
        oldPassword: currentPassword,
        newPassword: newPassword,
        confirmPassword: confirmNewPassword
    };
   
     
    if(currentPassword.trim()==''){
      currentPasswordError.style.display='block'
      validate=false
    }
    if(newPassword!=confirmNewPassword){
      confirmNewPasswordError.style.display='block'
      validate=false
    }

    
    
   if(validate){
    // Example fetch request to send formData to the server
    fetch('/profile/changePassword', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showsnackbar('Password changed successfully!');
            resetPasswordForm()
            $('#changePasswordModal').modal('hide')
            // window.location.reload()
            // Optionally, clear form fields or perform other actions on success
        } else {
            showsnackbar('Failed to change password. Please try again.');
        }
    })
    .catch(error => {
        console.error('Error changing password:', error);
        showsnackbar('Failed to change password. Please try again.');
    });
  
}}

function resetPasswordForm(){
  document.getElementById('changePasswordForm').reset();
    // Clear any error messages
    document.getElementById('currentPasswordError').style.display = 'none';
    document.getElementById('confirmNewPasswordError').style.display = 'none';
}
document.addEventListener('DOMContentLoaded', function() {
    const changePasswordModal = document.getElementById('changePasswordModal');
    if (changePasswordModal) {
        changePasswordModal.addEventListener('hidden.bs.modal', function () {
            resetPasswordForm();
        });
    }
});

   
  function submitProfileForm() {
    const formData = {
      name: document.getElementById('profileName').value,
      email: document.getElementById('profileEmail').value,
      mobile: document.getElementById('profileMobile').value
    };

    let name = document.getElementById('profileName').value;
let nameError = document.getElementById('profileNameError');
let mobileInput = document.getElementById('profileMobile');
let mobileError = document.getElementById('profileMobileError');

let validate = true;

if (name.trim() === '') {
    nameError.style.display = 'block';
    validate = false;
}
if (mobileInput.value.trim() === '') {
    mobileError.style.display = 'block';
    validate = false;
}

function validatePhoneNumber(mobile) {
    const mobileNumberPattern = /^[1-9][0-9]{9}$/;
    return mobileNumberPattern.test(mobile);
}


    if (validatePhoneNumber(mobileInput.value)) {
        mobileError.style.display = 'none';
        validate=true
    } else {
        mobileError.style.display = 'block';
        mobileError.textContent = 'Mobile number should contain 10 digits and also not start with zero';
        validate = false
    };


    if(validate){
    fetch('/profile/editProfile', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showsnackbar('Profile updated successfully!');
        $('#editProfileModal').modal('hide')
        document.getElementById('uname').innerHTML =  data.user.name
        document.getElementById('uemail').innerHTML = data.user.email
        document.getElementById('uphone').innerHTML = data.user.mobile
        // location.reload();
      } else {
        showsnackbar('Failed ton.');
      }
    })
    .catch(error => {
      console.error('Error updating profile:', error);
      showsnackbar('Failed to update profile. Please try again.');
      $('#editProfileModal').modal('hide')
    });
  }
}

  function showsnackbar(text) {
  // Get the snackbar DIV
  var x = document.getElementById("snackbar");

  x.innerHTML = text
  // Add the "show" class to DIV
  x.className = "show";

  // After 3 seconds, remove the show class from DIV
  setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
}
</script>

</body>
</html>

<%- include('../layout/userlayout/footer') -%>
