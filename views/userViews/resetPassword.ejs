<%- include('../layout/userlayout/header',{isLogin:isLogin}) -%>
<style>
    #snackbar {
  visibility: hidden; /* Hidden by default. Visible on click */
  min-width: 250px; /* Set a default minimum width */
  margin-left: -125px; /* Divide value of min-width by 2 */
  background-color: #333; /* Black background color */
  color: #fff; /* White text color */
  text-align: center; /* Centered text */
  border-radius: 2px; /* Rounded borders */
  padding: 16px; /* Padding */
  position: fixed; /* Sit on top of the screen */
  z-index: 1; /* Add a z-index if needed */
  left: 50%; /* Center the snackbar */
  bottom: 30px; /* 30px from the bottom */
}

/* Show the snackbar when clicking on a button (class added with JavaScript) */
#snackbar.show {
  visibility: visible; /* Show the snackbar */
  /* Add animation: Take 0.5 seconds to fade in and out the snackbar.
  However, delay the fade out process for 2.5 seconds */
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}

@keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}

</style>
<div class="d-flex justify-content-center align-items-center" style="height: 100vh">
  <form method="post" id="resetPasswordForm" class="colorlib-form col-md-3" style="height: auto">
    <h2 class="text-center">Reset Password</h2>
    <div class="row">
      <div class="col-md-12">
        <div class="form-group">
          <input type="password" id="password" name="password" class="form-control" placeholder="Enter new password" required/>
          <div id="passwordError" class="text-danger d-none">Password must be at least 5 characters long and must not start with dots or spaces</div>
        </div>
      </div>
      <div class="col-md-12">
        <div class="form-group">
          <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" placeholder="Confirm new password" required/>
          <div id="confirmPasswordError" class="text-danger d-none">Passwords do not match</div>
        </div>
      </div>
      <input type="hidden" id="token" name="token" value="<%= token %>"/>
      <input type="submit" class="btn btn-dark" value="Submit"/>
    </div>
  </form>
</div>
<div id="snackbar"></div>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('resetPasswordForm');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const passwordError = document.getElementById('passwordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');

    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      const password = passwordInput.value.trim();
      const confirmPassword = confirmPasswordInput.value.trim();
      const token = document.getElementById('token').value;

      // Validate password
      const passwordRegex = /^(?!\s|\.)[a-zA-Z0-9._%+-]{5,}$/;
      if (!passwordRegex.test(password)) {
        passwordInput.classList.add('is-invalid');
        passwordError.classList.remove('d-none');
        return;
      } else {
        passwordInput.classList.remove('is-invalid');
        passwordError.classList.add('d-none');
      }

      // Validate password match
      if (password !== confirmPassword) {
        confirmPasswordInput.classList.add('is-invalid');
        confirmPasswordError.classList.remove('d-none');
        return;
      } else {
        confirmPasswordInput.classList.remove('is-invalid');
        confirmPasswordError.classList.add('d-none');
      }

      try {
        const response = await fetch('/resetPassword', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ password, token }),
        });

        const data = await response.json();
        if (response.ok) {
            showsnackbar('Password reset successful');
          window.location.href = '/login';
        } else {
            showsnackbar(data.message || 'Password reset failed');
        }
      } catch (error) {
        console.error('Error:', error);
      }
    });
  });

  function showsnackbar(text) {
  // Get the snackbar DIV
  var x = document.getElementById("snackbar");
    x.innerHTML=text
  // Add the "show" class to DIV
  x.className = "show";

  // After 3 seconds, remove the show class from DIV
  setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
}
</script>

<%- include('../layout/userlayout/footer') -%>
